#include "serialize.h"

const int CHUNK_SIZE = 25;
const int RECEIVING_MAILBOX = MAILBOX1;

const int X_DIM = 8;
const int Y_DIM = 8;
    
void initMap(char & in[][], int x_dim, int y_dim);
void sendMap(char & map[][], int x_dim, int y_dim);
void BTWait();

task main()
{
    TextOut(0, LCD_LINE1, StrCat("BT Status: ", NumToStr(BluetoothStatus(CONN_BT1))));
    NumOut(0, LCD_LINE2, NO_ERR);
    
    BTWait();
    TextOut(0, 0, "begin");

    char foo[X_DIM][Y_DIM];
    initMap(foo, X_DIM, Y_DIM);

    sendMap(foo, X_DIM, Y_DIM);
}

void sendMap(char & map[][], int x_dim, int y_dim) {
    string msg = serialize(map);
    int last_chunk = SizeOf(map) % CHUNK_SIZE;
    int num_of_chunks = (SizeOf(map) - last_chunk) / CHUNK_SIZE;  

    string header = createHeader(x_dim, y_dim, CHUNK_SIZE);
    SendRemoteString(1, 0, header);
    BTWait();

    for (int i = 0; i < num_of_chunks; i++)
    {
        string chunk = SubStr(msg, i * CHUNK_SIZE, (i + 1) * CHUNK_SIZE);
        SendRemoteString(1, 0, chunk);

        BTWait();
    }
    string chunk = SubStr(msg, num_of_chunks * CHUNK_SIZE, SizeOf(map));
    SendRemoteString(1, 0, chunk);
    BTWait();
    
    string fin = createFinMessage();
    SendRemoteString(1, 0, fin);
    BTWait();    
} 

void initMap(char & in[][], int x_dim, int y_dim) {
    for (int x = 0; x < x_dim; x++) {
        for (int y = 0; y < y_dim; y++) {
            in[x][y] = 'O';
        }
    }
}

void BTWait (){
    bool temp = false; 
    until(ReceiveRemoteBool(RECEIVING_MAILBOX, true, temp) == NO_ERR);
}
